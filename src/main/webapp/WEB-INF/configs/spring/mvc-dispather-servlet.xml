<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tool http://www.springframework.org/schema/tool/spring-tool.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--激活 @Required  @Autowired,jSR250's @PostConstruct ,@PreDestroy and @Resource等注解-->
    <!--启动Spring 基于Annotation的DI ,使用户可以在Spring MVC中使用 Spring 的强大功能-->
    <context:annotation-config></context:annotation-config>

    <!--Spring MVC 只需要关心 Controller ,无需关心Service之列,Service会被Spring容器扫描并加载-->
    <context:component-scan base-package="com.conan.mvcdemo">
        <!--只扫描 使用了@Controller标准的类-->
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- HandlerMapping, 无需配置， Spring MVC可以默认启动。 DefaultAnnotationHandlerMapping
		annotation-driven HandlerMapping -->

    <!--扩展了注解驱动, 可以将请求参数绑定到控制器参数-->
    <mvc:annotation-driven/>

    <!-- 静态资源处理， css， js， imgs -->
    <mvc:resources mapping="/resources/**" location="/resources/"/>

    <!-- 配置ViewResolver。
         可以用多个ViewResolver。
         使用order属性排序。
         InternalResourceViewResolver放在最后。

         这里的映射关系应该是自动AOP自动关联到 List<ViewResolver> viewResolvers
          -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">

        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsps/"/>
        <property name="suffix" value=".jsp"/>

    </bean>

    <!--这里的id  对应了 DispatcherServlet 中的属性-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="maxUploadSize" value="209715200"/>
        <property name="resolveLazily" value="true"/>
    </bean>

</beans>